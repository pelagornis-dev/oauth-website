---
import Layout from '../layouts/Layout.astro';
---

<Layout>
  <div class="w-full max-w-sm mx-auto mt-8">
    <h1 class="text-3xl font-bold text-black text-center mb-2">내 프로필</h1>
    <p class="text-center text-gray-500 mb-8 text-sm">Pelagornis OAuth 계정 정보</p>
    <div class="bg-white rounded-2xl border border-gray-100 p-8">
      <div id="profile-status" class="text-gray-400 text-sm mb-4">불러오는 중...</div>
      <div id="profile-info" class="space-y-5 hidden">
        <div>
          <div class="text-xs text-gray-400 mb-1">이메일</div>
          <div id="profile-email" class="text-base text-black font-medium"></div>
        </div>
        <div>
          <div class="text-xs text-gray-400 mb-1">이름</div>
          <div id="profile-name" class="text-base text-black font-medium"></div>
        </div>
        <div>
          <div class="text-xs text-gray-400 mb-1">이메일 인증</div>
          <span
            id="profile-verified"
            class="inline-block px-2 py-0.5 rounded-full text-xs font-semibold"></span>
        </div>
      </div>
    </div>
    <button
      id="logout-btn"
      class="w-full py-3 rounded-xl bg-black text-white font-semibold hover:bg-neutral-900 transition mt-8"
    >
      로그아웃
    </button>
  </div>
  <script type="module">
    const token = localStorage.getItem('accessToken');
    const statusDiv = document.getElementById('profile-status');
    const infoDiv = document.getElementById('profile-info');
    const emailSpan = document.getElementById('profile-email');
    const nameSpan = document.getElementById('profile-name');
    const verifiedSpan = document.getElementById('profile-verified');
    const logoutBtn = document.getElementById('logout-btn');
    if (!token) {
      window.location.href = '/login';
    } else {
      fetch('http://localhost:3000/api/v1/users/me', {
        headers: { Authorization: `Bearer ${token}` },
      })
        .then((res) => res.json())
        .then((data) => {
          if (data.success) {
            if (statusDiv) statusDiv.classList.add('hidden');
            if (infoDiv) infoDiv.classList.remove('hidden');
            if (emailSpan) emailSpan.textContent = data.data.user.email;
            if (nameSpan)
              nameSpan.textContent = `${data.data.user.firstName} ${data.data.user.lastName}`;
            if (verifiedSpan) {
              if (data.data.user.isEmailVerified) {
                verifiedSpan.textContent = '완료';
                verifiedSpan.className =
                  'inline-block px-2 py-0.5 rounded-full text-xs font-semibold bg-green-100 text-green-700';
              } else {
                verifiedSpan.textContent = '미완료';
                verifiedSpan.className =
                  'inline-block px-2 py-0.5 rounded-full text-xs font-semibold bg-gray-100 text-gray-500';
              }
            }
          } else {
            if (statusDiv) {
              statusDiv.textContent = '사용자 정보를 불러올 수 없습니다.';
              statusDiv.className = 'text-red-500 text-sm mb-4';
            }
          }
        })
        .catch(() => {
          if (statusDiv) {
            statusDiv.textContent = '네트워크 오류가 발생했습니다.';
            statusDiv.className = 'text-red-500 text-sm mb-4';
          }
        });
    }
    logoutBtn?.addEventListener('click', () => {
      localStorage.removeItem('accessToken');
      window.location.href = '/login';
    });
  </script>
</Layout>
