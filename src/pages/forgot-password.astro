---
import Layout from '../layouts/Layout.astro';
import CardContainer from '@components/CardContainer.astro';
import AuthTitle from '@components/AuthTitle.astro';
import AuthInput from '@components/AuthInput.astro';
import AuthButton from '@components/AuthButton.astro';
import AuthError from '@components/AuthError.astro';
import AuthSuccess from '@components/AuthSuccess.astro';
import AuthLinks from '@components/AuthLinks.astro';
---

<Layout>
  <CardContainer>
    <AuthTitle
      title="Forgot Password"
      description="가입하신 이메일로 비밀번호 재설정 링크를 보내드립니다."
    />
    <form
      id="forgot-form"
      class="space-y-5"
      autocomplete="off"
      method="POST"
      action="http://localhost:3000/api/v1/auth/forgot-password?locale=ko"
    >
      <AuthInput
        type="email"
        name="email"
        id="forgot-email"
        placeholder="이메일"
        autoComplete="username"
      />
      <AuthError id="forgot-error" />
      <AuthSuccess id="forgot-success" />
      <AuthButton id="forgot-btn" type="submit" text="재설정 메일 보내기" />
    </form>
    <AuthLinks
      links={[
        { label: '로그인', href: '/login', class: 'text-black hover:underline' },
        { label: '회원가입', href: '/register', class: 'text-gray-500 hover:underline' },
      ]}
    />
  </CardContainer>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('forgot-form') as HTMLFormElement | null;
      const emailInput = document.getElementById('forgot-email') as HTMLInputElement | null;
      const btn = document.getElementById('forgot-btn') as HTMLButtonElement | null;
      const resendBtn = document.getElementById('resend-btn') as HTMLButtonElement | null;
      const errorDiv = document.getElementById('forgot-error');
      const successDiv = document.getElementById('forgot-success');
      let lastEmail = '';
      function showError(msg: string) {
        if (errorDiv) {
          errorDiv.textContent = msg;
          errorDiv.classList.remove('hidden');
        }
      }
      function showSuccess(msg: string) {
        if (successDiv) {
          successDiv.textContent = msg;
          successDiv.classList.remove('hidden');
        }
      }
      function clearMsg() {
        if (errorDiv) errorDiv.classList.add('hidden');
        if (successDiv) successDiv.classList.add('hidden');
      }
      form?.addEventListener('submit', async (e) => {
        e.preventDefault();
        clearMsg();
        if (!emailInput || !btn || !form || !resendBtn) return;
        const emailVal = emailInput.value.trim();
        if (emailVal && emailVal.includes('@')) {
          btn.disabled = true;
          btn.textContent = '전송 중...';
          try {
            const response = await fetch(form.action, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ email: emailVal }),
            });
            const data = await response.json();
            if (data.success) {
              showSuccess('이메일로 재설정 링크를 보냈습니다.');
              btn.textContent = '재설정 메일 보내기';
              btn.disabled = false;
              lastEmail = emailVal;
              resendBtn.disabled = false;
            } else {
              showError(data.error?.message || '전송 실패');
              btn.textContent = '재설정 메일 보내기';
              btn.disabled = false;
            }
          } catch {
            showError('Network error');
            btn.textContent = '재설정 메일 보내기';
            btn.disabled = false;
          }
        } else {
          showError('올바른 이메일을 입력하세요.');
          emailInput.classList.add('border-red-500');
        }
      });
      resendBtn?.addEventListener('click', async () => {
        clearMsg();
        if (!lastEmail || !form || !resendBtn) return;
        resendBtn.disabled = true;
        try {
          const response = await fetch(form.action, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email: lastEmail }),
          });
          const data = await response.json();
          if (data.success) {
            showSuccess('이메일로 재설정 링크를 다시 보냈습니다.');
          } else {
            showError(data.error?.message || '전송 실패');
          }
        } catch {
          showError('Network error');
        }
        resendBtn.disabled = false;
      });
      emailInput?.addEventListener('input', () => {
        emailInput.classList.remove('border-red-500');
        clearMsg();
      });
    });
  </script>
</Layout>
