---
import Layout from '../layouts/Layout.astro';
---

<Layout>
  <div class="w-full max-w-sm mx-auto">
    <h1 class="text-2xl font-bold text-black text-center mb-2">Sign in</h1>
    <p class="text-center text-gray-500 mb-8 text-sm">Pelagornis OAuth에 로그인하세요</p>
    <form id="login-form" class="space-y-5" autocomplete="off">
      <div id="login-email-step">
        <input
          type="email"
          id="login-email"
          placeholder="이메일"
          required
          autocomplete="username"
          class="w-full px-4 py-3 rounded-xl border border-gray-200 bg-gray-50 focus:border-black focus:bg-white focus:ring-2 focus:ring-black focus:outline-none transition text-black placeholder-gray-400"
        />
      </div>
      <div id="login-password-step" class="hidden">
        <input
          type="password"
          id="login-password"
          placeholder="비밀번호"
          required
          autocomplete="current-password"
          class="w-full px-4 py-3 rounded-xl border border-gray-200 bg-gray-50 focus:border-black focus:bg-white focus:ring-2 focus:ring-black focus:outline-none transition text-black placeholder-gray-400"
        />
      </div>
      <button
        id="login-btn"
        type="submit"
        class="w-full py-3 rounded-xl bg-black text-white font-semibold hover:bg-neutral-900 transition disabled:opacity-60"
      >
        계속하기
      </button>
      <div id="login-error" class="text-red-500 text-sm mt-2 hidden"></div>
    </form>
    <div class="flex justify-between mt-8 text-sm">
      <a href="/register" class="text-black hover:underline">계정 만들기</a>
      <a href="/reset-password" class="text-gray-500 hover:underline">비밀번호 찾기</a>
    </div>
    <div class="my-8 flex items-center">
      <div class="flex-grow h-px bg-gray-200"></div>
      <span class="mx-3 text-gray-400 text-xs">또는</span>
      <div class="flex-grow h-px bg-gray-200"></div>
    </div>
    <a
      href="http://localhost:3000/api/v1/auth/google"
      class="w-full flex items-center justify-center py-3 rounded-xl border border-gray-200 bg-white hover:bg-gray-50 transition font-medium text-black"
    >
      <svg class="w-5 h-5 mr-2" viewBox="0 0 48 48"
        ><g
          ><path
            fill="#4285F4"
            d="M24 9.5c3.54 0 6.7 1.22 9.2 3.22l6.9-6.9C36.2 2.7 30.5 0 24 0 14.8 0 6.7 5.8 2.7 14.1l8.1 6.3C12.7 13.2 17.9 9.5 24 9.5z"
          ></path><path
            fill="#34A853"
            d="M46.1 24.6c0-1.6-.1-3.1-.4-4.6H24v9.1h12.4c-.5 2.7-2.1 5-4.4 6.6l7 5.4c4.1-3.8 6.5-9.4 6.5-16.5z"
          ></path><path
            fill="#FBBC05"
            d="M10.8 28.1c-1.1-3.2-1.1-6.7 0-9.9l-8.1-6.3C.6 16.2 0 19 0 22c0 3 .6 5.8 1.7 8.4l9.1-7.3z"
          ></path><path
            fill="#EA4335"
            d="M24 48c6.5 0 12-2.1 16.1-5.7l-7-5.4c-2 1.3-4.5 2-7.1 2-6.1 0-11.3-4.1-13.2-9.6l-8.1 6.3C6.7 42.2 14.8 48 24 48z"
          ></path></g
        ></svg
      >
      Google로 계속하기
    </a>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('login-form');
      const emailStep = document.getElementById('login-email-step');
      const passwordStep = document.getElementById('login-password-step');
      const emailInput = document.getElementById('login-email');
      const passwordInput = document.getElementById('login-password');
      const btn = document.getElementById('login-btn');
      const errorDiv = document.getElementById('login-error');
      let step = 1;
      let email = '';

      function showError(msg) {
        if (errorDiv) {
          errorDiv.textContent = msg;
          errorDiv.classList.remove('hidden');
        }
      }
      function clearError() {
        if (errorDiv) errorDiv.classList.add('hidden');
      }

      form?.addEventListener('submit', async (e) => {
        e.preventDefault();
        clearError();
        if (step === 1) {
          if (!emailInput || !passwordStep || !btn) return;
          const emailVal = emailInput instanceof HTMLInputElement ? emailInput.value.trim() : '';
          email = emailVal;
          if (email && email.includes('@')) {
            emailStep?.classList.add('hidden');
            passwordStep.classList.remove('hidden');
            btn.textContent = '로그인';
            if (passwordInput instanceof HTMLInputElement) passwordInput.focus();
            step = 2;
          } else {
            showError('올바른 이메일을 입력하세요.');
            emailInput.classList.add('border-red-500');
          }
        } else if (step === 2) {
          if (!passwordInput || !btn) return;
          const passwordVal = passwordInput instanceof HTMLInputElement ? passwordInput.value : '';
          if (passwordVal) {
            btn instanceof HTMLButtonElement && (btn.disabled = true);
            btn.textContent = '로그인 중...';
            try {
              const response = await fetch('http://localhost:3000/api/v1/auth/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ email, password: passwordVal }),
              });
              const data = await response.json();
              if (data.success) {
                localStorage.setItem('accessToken', data.data.tokens.accessToken);
                window.location.href = '/profile';
              } else {
                showError(data.error?.message || '로그인 실패');
                passwordInput.classList.add('border-red-500');
                btn.textContent = '로그인';
                btn instanceof HTMLButtonElement && (btn.disabled = false);
              }
            } catch {
              showError('Network error');
              btn.textContent = '로그인';
              btn instanceof HTMLButtonElement && (btn.disabled = false);
            }
          } else {
            showError('비밀번호를 입력하세요.');
            passwordInput.classList.add('border-red-500');
          }
        }
      });

      emailInput?.addEventListener('input', () => {
        emailInput.classList.remove('border-red-500');
        clearError();
      });
      passwordInput?.addEventListener('input', () => {
        passwordInput.classList.remove('border-red-500');
        clearError();
      });
    });
  </script>
</Layout>
